// Code generated by entc, DO NOT EDIT.

package oauth2client

import (
	"fmt"
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the oauth2client type in the database.
	Label = "oauth2client"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldInternalID holds the string denoting the internal_id field in the database.
	FieldInternalID = "internal_id"
	// FieldSecret holds the string denoting the secret field in the database.
	FieldSecret = "secret"
	// FieldRedirectUris holds the string denoting the redirect_uris field in the database.
	FieldRedirectUris = "redirect_uris"
	// FieldTrustedPeers holds the string denoting the trusted_peers field in the database.
	FieldTrustedPeers = "trusted_peers"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// Table holds the table name of the oauth2client in the database.
	Table = "oauth2clients"
)

// Columns holds all SQL columns for oauth2client fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldCreateTime,
	FieldUpdateTime,
	FieldInternalID,
	FieldSecret,
	FieldRedirectUris,
	FieldTrustedPeers,
	FieldType,
	FieldName,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// DefaultInternalID holds the default value on creation for the "internal_id" field.
	DefaultInternalID func() uuid.UUID
	// SecretValidator is a validator for the "secret" field. It is called by the builders before save.
	SecretValidator func(string) error
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
)

// Type defines the type for the "type" enum field.
type Type string

// TypeConfidential is the default value of the Type enum.
const DefaultType = TypeConfidential

// Type values.
const (
	TypeConfidential Type = "confidential"
	TypePublic       Type = "public"
	TypeCredentialed Type = "credentialed"
)

func (_type Type) String() string {
	return string(_type)
}

// TypeValidator is a validator for the "type" field enum values. It is called by the builders before save.
func TypeValidator(_type Type) error {
	switch _type {
	case TypeConfidential, TypePublic, TypeCredentialed:
		return nil
	default:
		return fmt.Errorf("oauth2client: invalid enum value for type field: %q", _type)
	}
}
