// Code generated by entc, DO NOT EDIT.

package authrequest

import (
	"fmt"
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the authrequest type in the database.
	Label = "auth_request"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldRequestID holds the string denoting the request_id field in the database.
	FieldRequestID = "request_id"
	// FieldClientID holds the string denoting the client_id field in the database.
	FieldClientID = "client_id"
	// FieldScopes holds the string denoting the scopes field in the database.
	FieldScopes = "scopes"
	// FieldResponseType holds the string denoting the response_type field in the database.
	FieldResponseType = "response_type"
	// FieldRedirectURI holds the string denoting the redirect_uri field in the database.
	FieldRedirectURI = "redirect_uri"
	// FieldNonce holds the string denoting the nonce field in the database.
	FieldNonce = "nonce"
	// FieldState holds the string denoting the state field in the database.
	FieldState = "state"
	// FieldLoggedIn holds the string denoting the logged_in field in the database.
	FieldLoggedIn = "logged_in"
	// FieldExpiry holds the string denoting the expiry field in the database.
	FieldExpiry = "expiry"
	// FieldCodeChallenge holds the string denoting the code_challenge field in the database.
	FieldCodeChallenge = "code_challenge"
	// FieldCodeChallengeMethod holds the string denoting the code_challenge_method field in the database.
	FieldCodeChallengeMethod = "code_challenge_method"
	// Table holds the table name of the authrequest in the database.
	Table = "auth_requests"
)

// Columns holds all SQL columns for authrequest fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldCreateTime,
	FieldUpdateTime,
	FieldRequestID,
	FieldClientID,
	FieldScopes,
	FieldResponseType,
	FieldRedirectURI,
	FieldNonce,
	FieldState,
	FieldLoggedIn,
	FieldExpiry,
	FieldCodeChallenge,
	FieldCodeChallengeMethod,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// DefaultRequestID holds the default value on creation for the "request_id" field.
	DefaultRequestID func() uuid.UUID
	// DefaultCodeChallenge holds the default value on creation for the "code_challenge" field.
	DefaultCodeChallenge string
)

// CodeChallengeMethod defines the type for the "code_challenge_method" enum field.
type CodeChallengeMethod string

// CodeChallengeMethodPlain is the default value of the CodeChallengeMethod enum.
const DefaultCodeChallengeMethod = CodeChallengeMethodPlain

// CodeChallengeMethod values.
const (
	CodeChallengeMethodPlain CodeChallengeMethod = "plain"
	CodeChallengeMethodS256  CodeChallengeMethod = "S256"
)

func (ccm CodeChallengeMethod) String() string {
	return string(ccm)
}

// CodeChallengeMethodValidator is a validator for the "code_challenge_method" field enum values. It is called by the builders before save.
func CodeChallengeMethodValidator(ccm CodeChallengeMethod) error {
	switch ccm {
	case CodeChallengeMethodPlain, CodeChallengeMethodS256:
		return nil
	default:
		return fmt.Errorf("authrequest: invalid enum value for code_challenge_method field: %q", ccm)
	}
}
